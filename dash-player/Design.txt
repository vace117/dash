# Home Page

## Template

 - <<ERROR Text>>

Please enter the URL: _______________

 <<WATCH Button / Busy Spinner>>

## Script
### Methods

    watchVideoURL(selectedURL): {
        - Hide button, activate spinner

        - this.$store.dispatch('loadVideo', selectedURL).then( () => {
            - Activate ROUTE to Video Player page
        })
        .catch( (error) => {
            - Show button, deactivate spinner
            - Display error
        })
    }


# Store Actions
  actions: {
    loadVideo ({ commit, state }, selectedURL) {
        return new Promise((resolve, reject) => {
            if (selectedURL exists) {
                - Generate channel name of the form 'private-[suffix of selected URL (the MPD file name)]'

                - Subscribe to the channel by talking to Authentication Server

                commit('storeActiveChannel', channel)

                resolve()
            }
            else {
                reject("Bad URL Message")
            }
        })
    },

    createDashPlayer(context) {

        - Each of the handlers will use the STORED channel to trigger an event

        - Register an event handler for each event and manipulate this.$store.dashPlayer accordingly.
    }
  }


# Video Page
<template>

    - Dash Player Video markup

</template>


<script>
export default {
  created() {
    this.dashPlayer = <Create the DASH Player Object>

    - bind handlers to all buttons:
        - this.play
        - this.pause
        - this.seek
  },

  methods: {
    play(): {
        this.$store.channel.trigger('client-play', { time: <time index> })
    },
    pause(): {
        this.$store.channel.trigger('client-pause', { })
    },
    seek(): {
        this.$store.channel.trigger('client-seek', { time: <time index> })
    }

  }
};
</script>

<script>

    - onCreate(): {
        initDashPlayer()
    }

    function initDashPlayer() {

    }

</script>
